{"version":3,"sources":["BarChart/BarChart.tsx","LineChart/LineChart.tsx","PieChart/PieChart.tsx","App.tsx","index.tsx"],"names":["BarChart","chartData","Chart","register","registerables","className","data","LineChart","PieChart","App","useState","valueX","setValueX","valueY","setValueY","selectedOption","setSelectedOption","backgroundColors","inputHandler","event","target","name","value","handleOptionChange","labels","replace","split","datasets","label","backgroundColor","borderColor","htmlFor","type","onChange","selectComponent","checked","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8RASaA,EAA4B,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UAG1C,OAFAC,IAAMC,SAAN,MAAAD,IAAK,YAAaE,MAGhB,qBAAKC,UAAU,YAAf,SACE,cAAC,IAAD,CAAKC,KAAML,OCLJM,EAA2B,SAAC,GAAmB,IAAjBN,EAAgB,EAAhBA,UAGzC,OAFAC,IAAMC,SAAN,MAAAD,IAAK,YAAaE,MAGhB,qBAAKC,UAAU,aAAf,SACE,cAAC,IAAD,CAAMC,KAAML,OCLLO,EAA4B,SAAC,GAAmB,IAAjBP,EAAgB,EAAhBA,UAG1C,OAFAC,IAAMC,SAAN,MAAAD,IAAK,YAAaE,MAGhB,qBAAKC,UAAU,YAAf,SACE,cAAC,IAAD,CAAKC,KAAML,OCPJQ,EAAgB,WAC3B,MAA4BC,mBAAS,8CAArC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAA4BF,mBAAS,2BAArC,mBAAOG,EAAP,KAAeC,EAAf,KACA,EAA4CJ,mBAAS,OAArD,mBAAOK,EAAP,KAAuBC,EAAvB,KACMC,EAAmB,CAAC,mBAAoB,mBAAoB,oBAE5DC,EAAe,SAACC,GACM,WAAtBA,EAAMC,OAAOC,KACfT,EAAUO,EAAMC,OAAOE,OAEvBR,EAAUK,EAAMC,OAAOE,QAIrBC,EAAqB,SAACJ,GAC1BH,EAAkBG,EAAMC,OAAOE,QAG3BhB,EAAa,CACjBkB,OAAQb,EAAOc,QAAQ,MAAO,IAAIC,MAAM,KACxCC,SAAU,CAAC,CACTC,MAAM,GAAD,OAAKb,EAAL,UACLc,gBAAqC,SAAnBd,EAA6BE,EAAiB,GAAKA,EACrEa,YAAa,gBACbxB,KAAMO,EAAOY,QAAQ,MAAO,IAAIC,MAAM,QAiB1C,OACE,sBAAKrB,UAAU,MAAf,UACE,sBAAKA,UAAU,cAAf,UACE,wBAAOA,UAAU,cAAc0B,QAAQ,SAAvC,2BAEE,uBACEV,KAAK,SACLW,KAAK,OACLV,MAAOX,EACPN,UAAU,aACV4B,SAAUf,OAGd,wBAAOb,UAAU,cAAc0B,QAAQ,SAAvC,2BAEE,uBACEC,KAAK,OACLX,KAAK,SACLC,MAAOT,EACPR,UAAU,aACV4B,SAAUf,UAjCI,WACtB,OAAQH,GACN,IAAK,MACH,OAAQ,cAAC,EAAD,CAAUd,UAAWK,IAC/B,IAAK,OACH,OAAQ,cAAC,EAAD,CAAWL,UAAWK,IAChC,IAAK,MACH,OAAQ,cAAC,EAAD,CAAUL,UAAWK,IAC/B,QACE,OAAQ,cAAC,EAAD,CAAUL,UAAWK,KA4B9B4B,GACD,sBAAK7B,UAAU,qBAAf,UACE,wBAAO0B,QAAQ,MAAf,UACE,uBACEC,KAAK,QACLV,MAAM,MACNa,QAA4B,QAAnBpB,EACTkB,SAAUV,IALd,eASA,wBAAOQ,QAAQ,OAAf,UACE,uBACEC,KAAK,QACLV,MAAM,OACNa,QAA4B,SAAnBpB,EACTkB,SAAUV,IALd,gBASA,wBAAOQ,QAAQ,MAAf,UACE,uBACEC,KAAK,QACLV,MAAM,MACNa,QAA4B,QAAnBpB,EACTkB,SAAUV,IALd,sBCvFRa,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.f26f946e.chunk.js","sourcesContent":["import React from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport { Chart, registerables } from 'chart.js';\nimport { Data } from '../react-app-env.d';\n\ntype Props = {\n  chartData: Data,\n};\n\nexport const BarChart: React.FC<Props> = ({ chartData }) => {\n  Chart.register(...registerables);\n\n  return (\n    <div className=\"bar-chart\">\n      <Bar data={chartData} />\n    </div>\n  );\n};\n","import React from 'react';\nimport { Chart, registerables } from 'chart.js';\nimport { Line } from 'react-chartjs-2';\n// import { Data } from '../react-app-env.d';\n\n// type Props = {\n//   chartData: Data,\n// };\n\nexport const LineChart: React.FC<any> = ({ chartData }) => {\n  Chart.register(...registerables);\n\n  return (\n    <div className=\"line-chart\">\n      <Line data={chartData} />\n    </div>\n  );\n};\n","import React from 'react';\nimport { Pie } from 'react-chartjs-2';\nimport { Chart, registerables } from 'chart.js';\nimport { Data } from '../react-app-env.d';\n\ntype Props = {\n  chartData: Data,\n};\n\nexport const PieChart: React.FC<Props> = ({ chartData }) => {\n  Chart.register(...registerables);\n\n  return (\n    <div className=\"pie-chart\">\n      <Pie data={chartData} />\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { BarChart } from './BarChart/BarChart';\nimport { Data } from './react-app-env.d';\nimport { LineChart } from './LineChart/LineChart';\nimport { PieChart } from './PieChart/PieChart';\n\nexport const App: React.FC = () => {\n  const [valueX, setValueX] = useState('January, February, March, April, May, June');\n  const [valueY, setValueY] = useState('0, 10, 5, 2, 20, 30, 45');\n  const [selectedOption, setSelectedOption] = useState('Bar');\n  const backgroundColors = ['rgb(137,161,246)', 'rgb(160,255,155)', 'rgb(249,166,255)'];\n\n  const inputHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (event.target.name === 'xValue') {\n      setValueX(event.target.value);\n    } else {\n      setValueY(event.target.value);\n    }\n  };\n\n  const handleOptionChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setSelectedOption(event.target.value);\n  };\n\n  const data: Data = {\n    labels: valueX.replace(/\\s/g, '').split(','),\n    datasets: [{\n      label: `${selectedOption} Chart`,\n      backgroundColor: (selectedOption === 'Line') ? backgroundColors[0] : backgroundColors,\n      borderColor: 'rgb(0,51,255)',\n      data: valueY.replace(/\\s/g, '').split(','),\n    }],\n  };\n\n  const selectComponent = () => {\n    switch (selectedOption) {\n      case 'Bar':\n        return (<BarChart chartData={data} />);\n      case 'Line':\n        return (<LineChart chartData={data} />);\n      case 'Pie':\n        return (<PieChart chartData={data} />);\n      default:\n        return (<BarChart chartData={data} />);\n    }\n  };\n\n  return (\n    <div className=\"app\">\n      <div className=\"app__inputs\">\n        <label className=\"app__labels\" htmlFor=\"xValue\">\n          X axis labels:\n          <input\n            name=\"xValue\"\n            type=\"text\"\n            value={valueX}\n            className=\"app__input\"\n            onChange={inputHandler}\n          />\n        </label>\n        <label className=\"app__labels\" htmlFor=\"yValue\">\n          Y axis labels:\n          <input\n            type=\"text\"\n            name=\"yValue\"\n            value={valueY}\n            className=\"app__input\"\n            onChange={inputHandler}\n          />\n        </label>\n      </div>\n      {selectComponent()}\n      <div className=\"app__radio-buttons\">\n        <label htmlFor=\"bar\">\n          <input\n            type=\"radio\"\n            value=\"Bar\"\n            checked={selectedOption === 'Bar'}\n            onChange={handleOptionChange}\n          />\n          Bar Chart\n        </label>\n        <label htmlFor=\"line\">\n          <input\n            type=\"radio\"\n            value=\"Line\"\n            checked={selectedOption === 'Line'}\n            onChange={handleOptionChange}\n          />\n          Line Chart\n        </label>\n        <label htmlFor=\"pie\">\n          <input\n            type=\"radio\"\n            value=\"Pie\"\n            checked={selectedOption === 'Pie'}\n            onChange={handleOptionChange}\n          />\n          Pie Chart\n        </label>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport { App } from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}